{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["ReactGA","initialize","pageview","window","location","hash","style","bar","showBar","background","minHeight","display","justifyContent","flexDirection","alignItems","buttonContainer","button","isActive","color","padding","fontSize","borderRadius","cursor","WebkitUserSelect","MozUserSelect","MsUserSelect","height","boxShadow","whiteSpace","link","textDecoration","control","margin","playPause","width","seek","angle","barShown","position","right","zIndex","textbox","border","outline","instructions","marginTop","duration","String","raw","durationRE","RegExp","vId","videoIdRE","videoWithTimestampRE","anyPlaying","vods","playing","getMilliseconds","durationString","match","parseInt","toTwitchTime","seconds","secondsLeft","hours","Math","floor","minutes","round","urlPath","substr","App","React","useState","active","vodState","setVodState","vodsRef","useRef","current","activeVod","ref","handler","newVodText","setNewVodText","smartMute","setSmartMute","smartPlay","setSmartPlay","showTopBar","setShowTopBar","showBottomBar","setShowBottomBar","show","useTimestamp","url","timestamp","shareState","setShareState","error","setError","initialSync","setInitialSync","shareWindow","useEffect","listener","event","contains","target","document","addEventListener","removeEventListener","shareText","boxSize","windowSize","boxes","ratio","adjustedWindowSize","bestBox","rows","cols","ceil","w","h","findBoxSize","undefined","setWindowSize","handleResize","innerWidth","innerHeight","useWindowSize","length","getVod","vodId","fetch","method","body","headers","then","resp","json","data","video","vodData","start","Date","createdAt","end","getTime","id","createRef","volume","muted","showButtons","buttonTimeoutRef","Error","syncVods","time","mustSyncAll","v","user_name","push","offset","seekTo","getTimestamp","getCurrentTime","getLink","base","origin","timestampIndex","i","vod","interval","setInterval","anyActive","newActive","player","getInternalPlayer","getMuted","console","log","clearTimeout","vodIds","split","syncVod","vodPromises","vodIdStr","includes","milliseconds","Promise","all","timeToSync","catch","message","isMobile","flexGrow","flexBasis","marginLeft","marginRight","maxHeight","overflow","boxSizing","icon","faTimes","className","onClick","maxWidth","type","value","onChange","e","placeholder","paddingLeft","isFirstVod","concat","top","left","alignSelf","size","readOnly","faCopy","select","execCommand","checked","href","faAngleUp","faAngleDown","bottom","alignContent","flexWrap","minWidth","marginBottom","map","index","key","onMouseEnter","setTimeout","onMouseMove","visibility","currentSeconds","currentTime","splice","controls","config","twitch","options","autoplay","onPlay","onPause","progressInterval","flex","latestVod","faUndo","faPause","faPlay","anyVodsPlaying","faRedo","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.428a6b1b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ReactPlayer from 'react-player/twitch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faRedo, faUndo, faAngleUp, faAngleDown, faTimes, faCopy} from '@fortawesome/free-solid-svg-icons'\nimport {isMobile} from 'react-device-detect'\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-161745919-3')\nReactGA.pageview(\"/\" + window.location.hash)\n\nconst minHeight = 300\nconst defaultVolume = .5\nconst progressInterval = 1000\nconst twitchPurple = \"#9147ff\"\n\nconst style= {\n  bar: showBar => ({\n    background: \"#333333\",\n    minHeight: showBar ? 52 : 0,\n    display: showBar ? \"flex\" : \"none\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  }),\n  buttonContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  button: isActive => ({\n    background: \"#bdbdbd\",\n    color: \"#2b2b2b\",\n    padding: \"1px 5px\",\n    fontSize: \"13px\",\n    borderRadius: \"2px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    cursor: \"pointer\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    MsUserSelect: \"none\",\n    height: \"26px\",\n    boxShadow: isActive ? `inset 1px 1px 3px ${twitchPurple}, inset -1px -1px 3px ${twitchPurple}` : \"\",\n    whiteSpace: \"nowrap\",\n  }),\n  link: {\n    color: \"#bdbdbd\",\n    textDecoration: \"none\",\n    whiteSpace: \"nowrap\",\n  },\n  control: {\n    margin: \"9px\",\n    color: \"#bdbdbd\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    MsUserSelect: \"none\",\n    cursor: \"pointer\",\n  },\n  playPause: {\n    width: \"28px\",\n    height: \"28px\",\n  },\n  seek: {\n    width: \"18px\",\n    height: \"18px\",\n  },\n  angle: barShown => ({\n    width: \"20px\",\n    height: \"20px\",\n    margin: \"9px 9px\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    MsUserSelect: \"none\",\n    borderRadius: \"4px\",\n    padding: \"7px\",\n    color: barShown ? \"black\" : \"white\",\n    position: \"absolute\",\n    right: 0,\n    zIndex: 2,\n    cursor: \"pointer\",\n  }),\n  textbox: {\n    background: \"#cfcfcf\",\n    border: \"none\",\n    outline: \"none\",\n    borderRadius: \"2px\",\n  },\n  instructions: {\n    fontSize: \"15px\",\n    marginTop: \"8px\",\n  }\n}\n\nconst duration = String.raw`(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)`\nconst durationRE = new RegExp(`${duration}`)\nconst vId = String.raw`\\d\\d\\d\\d\\d\\d\\d\\d\\d`\nconst videoIdRE = new RegExp(`^(${vId})$|.*twitch\\\\.tv\\\\/videos\\\\/(${vId})$`)\nconst videoWithTimestampRE = new RegExp(`(${vId})(?:\\\\?t=(${duration}))?`)\n\n// Ratio is width:height.\nfunction findBoxSize(windowSize, boxes, ratio, showTopBar, showBottomBar) {\n  const adjustedWindowSize = {\n    width: windowSize.width,\n    height: windowSize.height-(style.bar(showTopBar).minHeight+style.bar(showBottomBar).minHeight),\n  }\n  let bestBox = {width: minHeight*ratio, height: minHeight}\n  // let bestBox = {width: 0, height: 0}\n  for (let rows = 1; rows <= boxes; rows++) {\n    let cols = Math.ceil(boxes/rows)\n    if (adjustedWindowSize.height*ratio/rows > adjustedWindowSize.width/cols) {\n      // Width bottlenecked\n      let w = adjustedWindowSize.width/cols\n      if (w > bestBox.width) {\n        bestBox = {width: w, height: w/ratio}\n      }\n    } else {\n      // Height bottlenecked\n      let h = adjustedWindowSize.height/rows\n      if (h > bestBox.height) {\n        bestBox = {width: h*ratio, height: h}\n      }\n    }\n  }\n  return bestBox\n}\n\nfunction anyPlaying(vods) {\n  for (let v of vods) {\n    if (v.playing) {\n      return true\n    }\n  }\n  return false\n}\n\n// Adapted from https://usehooks.com/useWindowSize/\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = React.useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  React.useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n// Copied from https://usehooks.com/useOnClickOutside/\nfunction useOnClickOutside(ref, handler) {\n  React.useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n\nfunction getMilliseconds(durationString) {\n  let match = durationString.match(durationRE)\n  const msFromSecs = parseInt(match[3]) * 1000\n  const msFromMins = parseInt(match[2]) * 60 * 1000\n  const msFromHours = parseInt(match[1]) * 60 * 60 * 1000\n  return msFromSecs + msFromMins + msFromHours\n}\n\nfunction toTwitchTime(seconds) {\n  let secondsLeft = seconds\n  const hours = Math.floor(secondsLeft/(60*60))\n  secondsLeft = secondsLeft - hours*60*60\n  const minutes = Math.floor(secondsLeft/60)\n  secondsLeft = Math.round(secondsLeft - minutes*60)\n  return `${hours}h${minutes}m${secondsLeft}s`\n}\n\nconst urlPath = window.location.hash.substr(2)\n\nfunction App() {\n\n  const [vodState, setVodState] = React.useState({\n    active: -1,\n    vods: [],\n  })\n\n  // These are used when we need to asynchronously remove buttons, which accidentally delete vods\n  // sometimes due to not knowing new vods were added.\n  const vodsRef = React.useRef(vodState.vods)\n  vodsRef.current = vodState.vods\n  const activeVod = React.useRef(vodState.active)\n  activeVod.current = vodState.active\n\n  const [newVodText, setNewVodText] = React.useState(\"\")\n\n  const [smartMute, setSmartMute] = React.useState(true)\n  const [smartPlay, setSmartPlay] = React.useState(true)\n  const [showTopBar, setShowTopBar] = React.useState(true)\n  const [showBottomBar, setShowBottomBar] = React.useState(true)\n  const [shareState, setShareState] = React.useState({\n    show: false,\n    useTimestamp: true,\n    url: \"\",\n    timestamp: \"\",\n  })\n  const [error, setError] = React.useState(\"\")\n  const [initialSync, setInitialSync] = React.useState(null)\n\n  const shareWindow = React.useRef()\n  useOnClickOutside(shareWindow, () => setShareState({...shareState, show: false}))\n  const shareText = React.useRef()\n\n  const windowSize = useWindowSize()\n  const boxSize = findBoxSize(windowSize, vodState.vods.length, 16/9, showTopBar, showBottomBar)\n\n  const getVod = (vodId) => {\n    return fetch(`https://gql.twitch.tv/gql`, {\n      method: `POST`, // eslint-disable-next-line\n      body: `{\\\"query\\\":\\\"query {\\\\n  video(id:\\\\\\\"${vodId}\\\\\\\") {\\\\n    createdAt\\\\n    duration\\\\n  }\\\\n}\\\\n\\\",\\\"variables\\\":null}`,\n      headers: {\n        \"Client-Id\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\",\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.data.video) {\n          // Find starting and ending times for this video.\n          const vodData = data.data.video\n          const start = new Date(vodData.createdAt)\n          const end = new Date(start.getTime() + getMilliseconds(vodData.duration))\n          return {\n            id: vodId,\n            start: start,\n            end: end,\n            ref: React.createRef(),\n            playing: false,\n            volume: defaultVolume,\n            muted: true,\n            showButtons: false,\n            buttonTimeoutRef: React.createRef(),\n            vodData: vodData,\n          }\n        } else {\n          throw new Error(`Video ${vodId} unavailable`)\n        }\n      })\n  }\n\n  const syncVods = (time, mustSyncAll) => {\n    let syncVods = []\n    for (let v of vodState.vods) {\n      if (v.end < time || v.start > time) {\n        setError(`Cannot sync ${v.vodData.user_name} (id ${v.id})`)\n        if (mustSyncAll) {\n          return\n        }\n      } else {\n        syncVods.push(v)\n      }\n    }\n    // Sync them.\n    for (let v of syncVods) {\n      let offset = (time - v.start)/1000\n      v.ref.current.seekTo(offset, \"seconds\")\n    }\n  }\n\n  const getTimestamp = () => {\n    if (vodState.active === -1) {\n      return toTwitchTime(vodState.vods[0].ref.current.getCurrentTime())\n    } else {\n      return toTwitchTime(vodState.vods[vodState.active].ref.current.getCurrentTime())\n    }\n  }\n\n  const getLink = (useTimestamp) => {\n    const base = window.location.origin+\"/#\"\n    let vods = \"\"\n    let timestampIndex = vodState.active === -1 ? 0 : vodState.active\n    for (let i = 0; i < vodState.vods.length; i++) {\n      const vod = vodState.vods[i]\n      let timestamp = \"\"\n      if (useTimestamp && i === timestampIndex) {\n        timestamp = getTimestamp()\n      }\n      vods = timestamp === \"\" ? `${vods}/${vod.id}` : `${vods}/${vod.id}?t=${timestamp}`\n    }\n    return `${base}${vods}`\n  }\n\n  // In charge of making sure vods maintain a single mute.\n  React.useEffect(() => {\n    // Set interval to watch for change in mutes.\n    const interval = setInterval(() => {\n      try {\n        if (smartMute) {\n          let anyActive = false\n          let newActive = -1\n          for (let i = 0; i < vodState.vods.length; i++) {\n            let player = vodState.vods[i].ref.current.getInternalPlayer()\n            if (player !== undefined) {\n              let muted = player.getMuted()\n              if (!muted) {\n                anyActive = true\n                // If this is a new active vod, remember it.\n                if (i !== vodState.active) {\n                  newActive = i\n                }\n              }\n            }\n          }\n          if (newActive !== -1) {\n            vodState.vods[newActive].muted = false\n            if (vodState.active !== -1) {\n              vodState.vods[vodState.active].muted = true\n            }\n            setVodState({\n              active: newActive,\n              vods: vodState.vods,\n            })\n          } else {\n            setVodState({\n              active: anyActive ? vodState.active : -1,\n              vods: vodState.vods,\n            })\n          }\n        }\n      } catch (error) {\n        setVodState({\n          active: -1,\n          vods: vodsRef.current,\n        })\n        console.log(error)\n      }\n    }, 50)\n    return () => clearTimeout(interval)\n  })\n\n  React.useEffect(() => {\n    if (urlPath) {\n      console.log(urlPath)\n      // Parse videos out of the urlPath and check that they are valid ID strings. Also, if there\n      // is a timestamp, store it.\n      const vodIds = urlPath.split(\"/\")\n      let syncVod = null\n      const vodPromises = []\n      for (let vodIdStr of vodIds) {\n        // Most likely this is just a trailing slash.\n        if (vodIdStr === \"\") {\n          continue\n        }\n        let match = vodIdStr.match(videoWithTimestampRE)\n        // Make sure this is a valid ID.\n        if (match === null) {\n          setError(`Incorrect ID in url: ${vodIdStr}`)\n          return\n        }\n        let vodId = match[1]\n        // If it has a timestamp, throw an error if it's an inaccurate timestamp or if we already\n        // had a timestamp.\n        if (vodIdStr.includes(\"?t=\")) {\n          if (match[2] === null) {\n            setError(`Invalid timestamp here: ${vodIdStr}`)\n            return\n          } else if (syncVod !== null) {\n            setError(`URL has multiple timestamps: ${vodIdStr}`)\n            return\n          } else {\n            syncVod = {milliseconds: getMilliseconds(match[2]), id: vodId}\n          }\n        }\n        vodPromises.push(getVod(vodId))\n      }\n      // Wait for all vods to finish loading, then set their state.\n      Promise.all(vodPromises)\n      .then((vods) => {\n        // If we don't need to sync to a time, then just set state.\n        if (!syncVod) {\n          setVodState({\n            active: -1,\n            vods: vods\n          })\n        } else {\n          // Set vods to playing before running a seek. Also, get the vod that we'll sync to.\n          let timeToSync = new Date(0)\n          for (let vod of vods) {\n            vod.playing = true\n            if (vod.id === syncVod.id) {\n              timeToSync = new Date(vod.start.getTime() + syncVod.milliseconds)\n            }\n          }\n          setInitialSync(timeToSync)\n          setVodState({\n            active: 0,\n            vods: vods\n          })\n        }\n      })\n      .catch(error => {\n        setError(`Error loading link: ${error.message}`)\n      })\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (initialSync) {\n      // Make sure refs exist for each vod.\n      for (let vod of vodState.vods) {\n        if (vod.ref.current === null) {\n          return\n        }\n      }\n      syncVods(initialSync, false)\n      setInitialSync(null)\n    } // eslint-disable-next-line\n  }, [vodState])\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"100vh\",\n        width: \"100vw\",\n        flexDirection: \"column\",\n        background: \"black\",\n      }}\n    >\n      {/* Header */}\n      <div style={{\n        ...style.bar(showTopBar),\n        padding: \"0px 5px\",\n        justifyContent: isMobile ? \"flex-start\" : style.bar(showTopBar).justifyContent,\n      }}>\n        {/* Left of input */}\n        {!isMobile &&\n        <div style={{display: \"flex\", flexGrow: 1, flexBasis: 0, alignItems: \"center\"}}>\n          {/* Error message */}\n          <div style={{\n            display: error === \"\" ? \"none\" : \"flex\",\n            alignItems: \"center\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\",\n            padding: \"4px\",\n            fontSize: \"13px\",\n            background: \"#757575\",\n            boxShadow: \"0 0 0 1px #b50000\",\n            borderRadius: \"2px\",\n            maxHeight: `${style.bar(true).height-8}px`,\n            overflow: \"scroll\",\n            boxSizing: \"border-box\",\n          }}>\n            <div>{error}</div>\n            <FontAwesomeIcon icon={faTimes} className=\"closeError\"\n              style={{\n                width: \"13px\",\n                height: \"13px\",\n                padding: \"3px\",\n                marginLeft: \"7px\",\n                borderRadius: \"2px\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => {setError(\"\")}}\n            />\n          </div>\n        </div>\n        }\n        {/* Inputs */}\n        <div style={{\n          ...style.buttonContainer,\n          flexGrow: 1,\n          justifyContent: \"center\",\n          maxWidth: isMobile ? \"350px\" : \"450px\",\n        }}>\n          <input\n            type=\"text\"\n            value={newVodText}\n            onChange={e => setNewVodText(e.target.value)}\n            placeholder=\"http://twitch.tv/videos/123456789 or 123456789\"\n            style={{\n              ...style.textbox,\n              paddingLeft: \"5px\",\n              height: style.button(false).height,\n              width: \"100%\",\n            }}\n          />\n          <div\n            style={{\n              ...style.button(false),\n              marginLeft: \"5px\",\n            }}\n            onClick={() => {\n              const match = newVodText.match(videoIdRE)\n              if (match !== null) {\n                const vodId = match[2] === undefined ? match[1] : match[2]\n                getVod(vodId)\n                .then((vod) => {\n                  const isFirstVod = (vodState.vods.length === 0)\n                  vod.muted = !isFirstVod\n                  setVodState({\n                    active: isFirstVod ? 0 : vodState.active,\n                    vods: vodState.vods.concat(vod)\n                  })\n                })\n                .catch(error => {\n                  setError(`Could not add video: ${error.message}`)\n                })\n              } else {\n                // No match, show error.\n                setError(`Could not parse video from text \"${newVodText}\"`)\n              }\n              setNewVodText(\"\")\n            }}\n          >\n            Add Video\n          </div>\n          {/* Share button */}\n          <div ref={shareWindow} style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n            <div style={{...style.button(false), marginLeft: \"5px\", position: \"relative\"}}\n              onClick={() => {\n                if (vodState.vods.length === 0) {\n                  setError(\"You can't share before adding videos!\")\n                  return\n                }\n                setShareState({...shareState, url: getLink(shareState.useTimestamp), show: !shareState.show, timestamp: getTimestamp()})\n              }}\n            >\n              Share\n            </div>\n            {/* Share window */}\n            <div\n              style={{\n                position: \"absolute\",\n                display: shareState.show ? \"flex\" : \"none\",\n                flexDirection: \"column\",\n                top: style.bar(true).minHeight+1,\n                left: isMobile ? \"0px\" : \"\",\n                background: \"#757575\",\n                borderRadius: \"3px\",\n                padding: \"4px 3px 3px 10px\",\n                zIndex: 2,\n              }}\n            >\n              <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                <div style={{fontSize: \"14px\"}}>Share</div>\n                <FontAwesomeIcon icon={faTimes} className=\"shareButton\"\n                  style={{\n                    width: \"18px\",\n                    height: \"18px\",\n                    padding: \"2px\",\n                    borderRadius: \"3px\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => {setShareState({...shareState, show: false})}}\n                />\n              </div>\n              <div style={{display: \"flex\", alignSelf: \"center\", alignItems: \"center\", margin: \"10px 0px\"}}>\n                <input\n                  ref={shareText}\n                  type=\"text\"\n                  size={shareState.url.length > 50 ? shareState.url.length : 50}\n                  style={{\n                    ...style.textbox,\n                    padding: \"5px 2px\",\n                  }}\n                  value={shareState.url}\n                  readOnly={true}\n                />\n                {/* </div> */}\n                <FontAwesomeIcon icon={faCopy} className=\"shareButton\"\n                  style={{\n                    width: \"18px\",\n                    height: \"18px\",\n                    marginLeft: \"6px\",\n                    marginRight: \"-2px\",\n                    padding: \"6px\",\n                    borderRadius: \"50%\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => {\n                    shareText.current.select()\n                    document.execCommand('copy')\n                  }}\n                />\n              </div>\n              <div style={{display: \"flex\", alignSelf: \"center\"}}>\n                <input\n                  type=\"checkbox\"\n                  checked={shareState.useTimestamp}\n                  onChange={(e) => {\n                    setShareState({\n                      ...shareState,\n                      useTimestamp: e.target.checked,\n                      url: getLink(e.target.checked),\n                      timestamp: getTimestamp(),\n                    })\n                  }}\n                />\n                <div\n                  style={{\n                    fontSize: \"14px\"\n                  }}\n                >\n                  Start at {shareState.timestamp}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Right of input */}\n        {!isMobile &&\n        <div\n          style={{\n            flexGrow: 1,\n            flexBasis: 0,\n            marginLeft: \"10px\",\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}\n        >\n          <a href=\"https://github.com/henryperson/twitchmultivod\" style={{...style.link, marginRight: \"20px\", fontSize: \"14px\"}}>Source</a>\n          <a href=\"https://www.buymeacoffee.com/henryperson\" style={{...style.link, marginRight: \"60px\", fontSize: \"14px\"}}>Buy Me Coffee</a>\n        </div>}\n      </div>\n      {/* Hide/show top/bottom bar icons */}\n      <FontAwesomeIcon\n        className=\"showhide\"\n        style={{...style.angle(showTopBar), top: 0}}\n        icon={showTopBar ? faAngleUp : faAngleDown}\n        onClick={() => setShowTopBar(!showTopBar)}\n      />\n      {/* Only show bottom bar if we're on desktop */}\n      {!isMobile &&\n      <FontAwesomeIcon\n        className=\"showhide\"\n        style={{...style.angle(showBottomBar), bottom: 0}}\n        icon={showBottomBar ? faAngleDown: faAngleUp}\n        onClick={() => setShowBottomBar(!showBottomBar)}\n      />\n      }\n      {/* Main body */}\n      <div\n        style={{\n          flexGrow: 1,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          flexBasis: 0,\n          flexWrap: \"wrap\",\n          minWidth: \"0%\",\n        }}\n      >\n        {vodState.vods.length === 0 &&\n          <div\n            style={{\n              color: style.link.color,\n              boxShadow: `0 0 0 1px ${style.link.color}`,\n              borderRadius: \"2px\",\n              padding: \"15px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              width: \"580px\",\n              margin: \"20px\",\n            }}\n          >\n            <div style={{\n              alignSelf: \"center\",\n              marginBottom: \"15px\",\n              fontSize: style.instructions.fontSize+2\n            }}>Instructions</div>\n            <div style={style.instructions}>1. Copy the links or ids of the VODs you want to watch\n            (one at a time) into the text box at the top and click \"Add Video\".</div>\n            <div style={style.instructions}>2. Find a point in a video where you want to watch, and\n            use that video's \"Sync To This\" button to watch all videos at that real time. You can\n            also use \"Earliest Sync\" to sync all videos to the earliest time where they were all live.</div>\n            <div style={style.instructions}>3. Click \"Share\" to get a link to the set of videos you\n            are watching and (optionally) a timestamp to sync them all to. The timestamp is whichever\n            video is unmuted at the time, and if they're all muted it defaults to the first video.</div>\n\n            <div style={style.instructions}>Other controls:</div>\n            <div style={style.instructions}>\n              <ul style={{paddingLeft: \"20px\", margin: \"6px 0px\"}}>\n                <li>Smart mute forces at most one video to be unmuted</li>\n                <li>Smart play forces all videos to pause/play together. You can use it to\n                get a bit more fine grained control over video sync, as it's not perfect.</li>\n                <li>Controls at the bottom apply to all videos. The skips go forward/back by 10 seconds.</li>\n                <li>The arrows on the top/bottom bars will show/hide those bars, if you want the extra space.</li>\n              </ul>\n            </div>\n            <div style={style.instructions}>Sorry if it's not perfect, I am limited in annoying\n            ways by the Twitch API. If you notice a bug, feel free to report it <a href=\"https://github.com/henryperson/twitchmultivod/issues\">here</a>.</div>\n            <div style={style.instructions}>Hope you enjoy!</div>\n          </div>\n        }\n        {vodState.vods.map((vod, index) => {\n          return (\n            <div\n              key={index}\n              style={{\n                width: boxSize.width,\n                height: boxSize.height,\n                boxSizing: \"border-box\",\n                padding: \"2px\",\n                position: \"relative\",\n              }}\n              onMouseEnter={() => {\n                vod.showButtons = true\n                setVodState({\n                  active: vodState.active,\n                  vods: vodState.vods,\n                })\n                if (vod.buttonTimeoutRef !== null) {\n                  clearTimeout(vod.buttonTimeoutRef.current)\n                }\n                vod.buttonTimeoutRef.current = setTimeout(() => {\n                  vod.showButtons = false\n                  setVodState({\n                    active: activeVod.current,\n                    vods: vodsRef.current,\n                  })\n                }, 2000)\n              }}\n            >\n              {/* Buttons for closing */}\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  right: 0,\n                  display: \"flex\",\n                  margin: \"12px\",\n                }}\n                // TODO: maybe don't repeat this code if it can be made a function without the\n                // rendering no longer working?\n                onMouseMove={() => {\n                  vod.showButtons = true\n                  setVodState({\n                    active: vodState.active,\n                    vods: vodState.vods,\n                  })\n                  if (vod.buttonTimeoutRef !== null) {\n                    clearTimeout(vod.buttonTimeoutRef.current)\n                  }\n                  vod.buttonTimeoutRef.current = setTimeout(() => {\n                    vod.showButtons = false\n                    setVodState({\n                      active: activeVod.current,\n                      vods: vodsRef.current,\n                    })\n                  }, 2000)\n                }}\n              >\n                {/* Sync button */}\n                <div\n                  style={{\n                    ...style.button(false),\n                    marginRight: \"10px\",\n                    visibility: vod.showButtons ? \"visible\" : \"hidden\",\n                  }}\n                  onClick={() => {\n                    // Check if the videos are syncable.\n                    const currentSeconds = vod.ref.current.getCurrentTime()\n                    const currentTime = new Date(vod.start.getTime() + currentSeconds*1000)\n                    syncVods(currentTime, false)\n                  }}\n                >\n                  Sync To This\n                </div>\n                {/* Close button */}\n                <FontAwesomeIcon icon={faTimes}\n                  style={{\n                    ...style.button(false),\n                    width: \"16px\",\n                    height: \"16px\",\n                    padding: \"6px\",\n                    visibility: vod.showButtons ? \"visible\" : \"hidden\",\n                  }}\n                  onClick={() => {\n                    if (vod.buttonTimeoutRef !== null) {\n                      clearTimeout(vod.buttonTimeoutRef.current)\n                    }\n                    vodState.vods.splice(index, 1)\n                    setVodState({\n                      active: vodState.active === index ? -1 : vodState.active,\n                      vods: vodState.vods,\n                    })\n                  }}\n                />\n              </div>\n              {/* Player itself */}\n              <ReactPlayer\n                ref={vod.ref}\n                url={\"https://www.twitch.tv/videos/\" + vod.id}\n                width=\"100%\"\n                height=\"100%\"\n                controls={true}\n                config={{\n                  twitch: {\n                    options: {\n                      time: \"0h0m0s\",\n                      autoplay: false,\n                    },\n                  },\n                }}\n                volume={vod.volume}\n                muted={vod.muted}\n                playing={vod.playing}\n                onPlay={() => {\n                  if (smartPlay) {\n                    for (let v of vodState.vods) {\n                      v.playing = true\n                    }\n                  }\n                  vod.playing = true\n                  setVodState({\n                    active: vodState.active,\n                    vods: vodState.vods,\n                  })\n                }}\n                onPause={() => {\n                  if (smartPlay) {\n                    for (let v of vodState.vods) {\n                      v.playing = false\n                    }\n                  }\n                  vod.playing = false\n                  setVodState({\n                    active: vodState.active,\n                    vods: vodState.vods,\n                  })\n                }}\n                progressInterval={progressInterval}\n              />\n            </div>\n          )\n        })}\n      </div>\n      {/* Footer */}\n      <div\n        style={{\n          ...style.bar(showBottomBar),\n        }}\n      >\n        <div style={{\n          ...style.buttonContainer,\n          flex: \"1 0 0\",\n          justifyContent: \"flex-start\",\n          marginRight: isMobile ? \"10px\" : \"20px\",\n        }}>\n          <div style={{...style.button(false), margin: \"10px\"}}\n              onClick={() => {\n                if (vodState.vods.length > 0) {\n                  // Find the latest vod.\n                  let latestVod = vodState.vods[0]\n                  for (let vod of vodState.vods) {\n                    if (vod.start > latestVod.start) {\n                      latestVod = vod\n                    }\n                  }\n                  syncVods(latestVod.start, true)\n                }\n              }\n            }\n          >\n            Earliest Sync\n          </div>\n          {!isMobile &&\n          <div style={{...style.button(smartMute), margin: \"10px\", width: \"95px\"}}\n            onClick={() => setSmartMute(!smartMute)}\n          >\n            Smart Mute {smartMute ? \"On\" : \"Off\"}\n          </div>\n          }\n          {!isMobile &&\n          <div style={{...style.button(smartPlay), margin: \"10px\", width: \"95px\"}}\n            onClick={() => setSmartPlay(!smartPlay)}\n          >\n            Smart Play {smartPlay ? \"On\" : \"Off\"}\n          </div>\n          }\n        </div>\n        {/* Central controls */}\n        <div style={style.buttonContainer}>\n          {/* Back 10 seconds */}\n          <FontAwesomeIcon style={{...style.control, ...style.seek}} icon={faUndo}\n            onClick={() => {\n              setSmartPlay(true)\n              for (let v of vodState.vods) {\n                v.playing = true\n              }\n              setVodState({\n                active: vodState.active,\n                vods: vodState.vods,\n              })\n              for (let v of vodState.vods) {\n                let currentTime = v.ref.current.getCurrentTime()\n                v.ref.current.seekTo(currentTime - 10)\n              }\n            }}\n          />\n          {/* Play/pause */}\n          <FontAwesomeIcon style={{...style.control, ...style.playPause}}\n            icon={anyPlaying(vodState.vods) ? faPause : faPlay}\n            onClick={() => {\n              setSmartPlay(true)\n              let anyVodsPlaying = anyPlaying(vodState.vods)\n              for (let v of vodState.vods) {\n                v.playing = !anyVodsPlaying\n              }\n              setVodState({\n                active: vodState.active === -1 ? 0 : vodState.active,\n                vods: vodState.vods,\n              })\n            }}\n          />\n          {/* Forward 10 seconds */}\n          <FontAwesomeIcon style={{...style.control, ...style.seek}} icon={faRedo}\n            onClick={() => {\n              setSmartPlay(true)\n              for (let v of vodState.vods) {\n                v.playing = true\n              }\n              setVodState({\n                active: vodState.active,\n                vods: vodState.vods,\n              })\n              for (let v of vodState.vods) {\n                let currentTime = v.ref.current.getCurrentTime()\n                v.ref.current.seekTo(currentTime + 10)\n              }\n            }}\n          />\n        </div>\n        <div style={{...style.buttonContainer, flex: \"1 0 0\", justifyContent: \"flex-end\"}}>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}